{"version":3,"file":"reactrouterv3.js","sources":["../../src/reactrouterv3.ts"],"sourcesContent":["import { WINDOW } from '@sentry/browser';\nimport type { Primitive, Transaction, TransactionContext, TransactionSource } from '@sentry/types';\n\nimport type { Location, ReactRouterInstrumentation } from './types';\n\n// Many of the types below had to be mocked out to prevent typescript issues\n// these types are required for correct functionality.\n\ntype HistoryV3 = {\n  location?: Location;\n  listen?(cb: (location: Location) => void): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n} & Record<string, any>;\n\nexport type Route = { path?: string; childRoutes?: Route[] };\n\nexport type Match = (\n  props: { location: Location; routes: Route[] },\n  cb: (error?: Error, _redirectLocation?: Location, renderProps?: { routes?: Route[] }) => void,\n) => void;\n\ntype ReactRouterV3TransactionSource = Extract<TransactionSource, 'url' | 'route'>;\n\n/**\n * Creates routing instrumentation for React Router v3\n * Works for React Router >= 3.2.0 and < 4.0.0\n *\n * @param history object from the `history` library\n * @param routes a list of all routes, should be\n * @param match `Router.match` utility\n */\nexport function reactRouterV3Instrumentation(\n  history: HistoryV3,\n  routes: Route[],\n  match: Match,\n): ReactRouterInstrumentation {\n  return (\n    startTransaction: (context: TransactionContext) => Transaction | undefined,\n    startTransactionOnPageLoad: boolean = true,\n    startTransactionOnLocationChange: boolean = true,\n  ) => {\n    let activeTransaction: Transaction | undefined;\n    let prevName: string | undefined;\n\n    // Have to use window.location because history.location might not be defined.\n    if (startTransactionOnPageLoad && WINDOW && WINDOW.location) {\n      normalizeTransactionName(\n        routes,\n        WINDOW.location as unknown as Location,\n        match,\n        (localName: string, source: ReactRouterV3TransactionSource = 'url') => {\n          prevName = localName;\n          activeTransaction = startTransaction({\n            name: prevName,\n            op: 'pageload',\n            origin: 'auto.pageload.react.reactrouterv3',\n            tags: {\n              'routing.instrumentation': 'react-router-v3',\n            },\n            metadata: {\n              source,\n            },\n          });\n        },\n      );\n    }\n\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen(location => {\n        if (location.action === 'PUSH' || location.action === 'POP') {\n          if (activeTransaction) {\n            activeTransaction.finish();\n          }\n          const tags: Record<string, Primitive> = {\n            'routing.instrumentation': 'react-router-v3',\n          };\n          if (prevName) {\n            tags.from = prevName;\n          }\n          normalizeTransactionName(routes, location, match, (localName: string, source: TransactionSource = 'url') => {\n            prevName = localName;\n            activeTransaction = startTransaction({\n              name: prevName,\n              op: 'navigation',\n              origin: 'auto.navigation.react.reactrouterv3',\n              tags,\n              metadata: {\n                source,\n              },\n            });\n          });\n        }\n      });\n    }\n  };\n}\n\n/**\n * Normalize transaction names using `Router.match`\n */\nfunction normalizeTransactionName(\n  appRoutes: Route[],\n  location: Location,\n  match: Match,\n  callback: (pathname: string, source?: ReactRouterV3TransactionSource) => void,\n): void {\n  let name = location.pathname;\n  match(\n    {\n      location,\n      routes: appRoutes,\n    },\n    (error, _redirectLocation, renderProps) => {\n      if (error || !renderProps) {\n        return callback(name);\n      }\n\n      const routePath = getRouteStringFromRoutes(renderProps.routes || []);\n      if (routePath.length === 0 || routePath === '/*') {\n        return callback(name);\n      }\n\n      name = routePath;\n      return callback(name, 'route');\n    },\n  );\n}\n\n/**\n * Generate route name from array of routes\n */\nfunction getRouteStringFromRoutes(routes: Route[]): string {\n  if (!Array.isArray(routes) || routes.length === 0) {\n    return '';\n  }\n\n  const routesWithPaths: Route[] = routes.filter((route: Route) => !!route.path);\n\n  let index = -1;\n  for (let x = routesWithPaths.length - 1; x >= 0; x--) {\n    const route = routesWithPaths[x];\n    if (route.path && route.path.startsWith('/')) {\n      index = x;\n      break;\n    }\n  }\n\n  return routesWithPaths\n    .slice(index)\n    .filter(({ path }) => !!path)\n    .map(({ path }) => path)\n    .join('');\n}\n"],"names":[],"mappings":";;AAKA;AACA;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,4BAAA;AACA,EAAA,OAAA;AACA,EAAA,MAAA;AACA,EAAA,KAAA;AACA,EAAA;AACA,EAAA,OAAA;AACA,IAAA,gBAAA;AACA,IAAA,0BAAA,GAAA,IAAA;AACA,IAAA,gCAAA,GAAA,IAAA;AACA,OAAA;AACA,IAAA,IAAA,iBAAA,CAAA;AACA,IAAA,IAAA,QAAA,CAAA;AACA;AACA;AACA,IAAA,IAAA,0BAAA,IAAA,MAAA,IAAA,MAAA,CAAA,QAAA,EAAA;AACA,MAAA,wBAAA;AACA,QAAA,MAAA;AACA,QAAA,MAAA,CAAA,QAAA;AACA,QAAA,KAAA;AACA,QAAA,CAAA,SAAA,EAAA,MAAA,GAAA,KAAA,KAAA;AACA,UAAA,QAAA,GAAA,SAAA,CAAA;AACA,UAAA,iBAAA,GAAA,gBAAA,CAAA;AACA,YAAA,IAAA,EAAA,QAAA;AACA,YAAA,EAAA,EAAA,UAAA;AACA,YAAA,MAAA,EAAA,mCAAA;AACA,YAAA,IAAA,EAAA;AACA,cAAA,yBAAA,EAAA,iBAAA;AACA,aAAA;AACA,YAAA,QAAA,EAAA;AACA,cAAA,MAAA;AACA,aAAA;AACA,WAAA,CAAA,CAAA;AACA,SAAA;AACA,OAAA,CAAA;AACA,KAAA;AACA;AACA,IAAA,IAAA,gCAAA,IAAA,OAAA,CAAA,MAAA,EAAA;AACA,MAAA,OAAA,CAAA,MAAA,CAAA,QAAA,IAAA;AACA,QAAA,IAAA,QAAA,CAAA,MAAA,KAAA,MAAA,IAAA,QAAA,CAAA,MAAA,KAAA,KAAA,EAAA;AACA,UAAA,IAAA,iBAAA,EAAA;AACA,YAAA,iBAAA,CAAA,MAAA,EAAA,CAAA;AACA,WAAA;AACA,UAAA,MAAA,IAAA,GAAA;AACA,YAAA,yBAAA,EAAA,iBAAA;AACA,WAAA,CAAA;AACA,UAAA,IAAA,QAAA,EAAA;AACA,YAAA,IAAA,CAAA,IAAA,GAAA,QAAA,CAAA;AACA,WAAA;AACA,UAAA,wBAAA,CAAA,MAAA,EAAA,QAAA,EAAA,KAAA,EAAA,CAAA,SAAA,EAAA,MAAA,GAAA,KAAA,KAAA;AACA,YAAA,QAAA,GAAA,SAAA,CAAA;AACA,YAAA,iBAAA,GAAA,gBAAA,CAAA;AACA,cAAA,IAAA,EAAA,QAAA;AACA,cAAA,EAAA,EAAA,YAAA;AACA,cAAA,MAAA,EAAA,qCAAA;AACA,cAAA,IAAA;AACA,cAAA,QAAA,EAAA;AACA,gBAAA,MAAA;AACA,eAAA;AACA,aAAA,CAAA,CAAA;AACA,WAAA,CAAA,CAAA;AACA,SAAA;AACA,OAAA,CAAA,CAAA;AACA,KAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,wBAAA;AACA,EAAA,SAAA;AACA,EAAA,QAAA;AACA,EAAA,KAAA;AACA,EAAA,QAAA;AACA,EAAA;AACA,EAAA,IAAA,IAAA,GAAA,QAAA,CAAA,QAAA,CAAA;AACA,EAAA,KAAA;AACA,IAAA;AACA,MAAA,QAAA;AACA,MAAA,MAAA,EAAA,SAAA;AACA,KAAA;AACA,IAAA,CAAA,KAAA,EAAA,iBAAA,EAAA,WAAA,KAAA;AACA,MAAA,IAAA,KAAA,IAAA,CAAA,WAAA,EAAA;AACA,QAAA,OAAA,QAAA,CAAA,IAAA,CAAA,CAAA;AACA,OAAA;AACA;AACA,MAAA,MAAA,SAAA,GAAA,wBAAA,CAAA,WAAA,CAAA,MAAA,IAAA,EAAA,CAAA,CAAA;AACA,MAAA,IAAA,SAAA,CAAA,MAAA,KAAA,CAAA,IAAA,SAAA,KAAA,IAAA,EAAA;AACA,QAAA,OAAA,QAAA,CAAA,IAAA,CAAA,CAAA;AACA,OAAA;AACA;AACA,MAAA,IAAA,GAAA,SAAA,CAAA;AACA,MAAA,OAAA,QAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;AACA,KAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,wBAAA,CAAA,MAAA,EAAA;AACA,EAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,IAAA,MAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,IAAA,OAAA,EAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,eAAA,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA;AACA;AACA,EAAA,IAAA,KAAA,GAAA,CAAA,CAAA,CAAA;AACA,EAAA,KAAA,IAAA,CAAA,GAAA,eAAA,CAAA,MAAA,GAAA,CAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,EAAA;AACA,IAAA,MAAA,KAAA,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;AACA,IAAA,IAAA,KAAA,CAAA,IAAA,IAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAA,EAAA;AACA,MAAA,KAAA,GAAA,CAAA,CAAA;AACA,MAAA,MAAA;AACA,KAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA,eAAA;AACA,KAAA,KAAA,CAAA,KAAA,CAAA;AACA,KAAA,MAAA,CAAA,CAAA,EAAA,IAAA,EAAA,KAAA,CAAA,CAAA,IAAA,CAAA;AACA,KAAA,GAAA,CAAA,CAAA,EAAA,IAAA,EAAA,KAAA,IAAA,CAAA;AACA,KAAA,IAAA,CAAA,EAAA,CAAA,CAAA;AACA;;;;"}