{"version":3,"file":"cookie.js","sources":["../../src/cookie.ts"],"sourcesContent":["/**\n * This code was originally copied from the 'cookie` module at v0.5.0 and was simplified for our use case.\n * https://github.com/jshttp/cookie/blob/a0c84147aab6266bdb3996cf4062e93907c0b0fc/index.js\n * It had the following license:\n *\n * (The MIT License)\n *\n * Copyright (c) 2012-2014 Roman Shtylman <shtylman@gmail.com>\n * Copyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Parses a cookie string\n */\nexport function parseCookie(str: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  let index = 0;\n\n  while (index < str.length) {\n    const eqIdx = str.indexOf('=', index);\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break;\n    }\n\n    let endIdx = str.indexOf(';', index);\n\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n\n    const key = str.slice(index, eqIdx).trim();\n\n    // only assign once\n    if (undefined === obj[key]) {\n      let val = str.slice(eqIdx + 1, endIdx).trim();\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n\n      try {\n        obj[key] = val.indexOf('%') !== -1 ? decodeURIComponent(val) : val;\n      } catch (e) {\n        obj[key] = val;\n      }\n    }\n\n    index = endIdx + 1;\n  }\n\n  return obj;\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,WAAA,CAAA,GAAA,EAAA;AACA,EAAA,MAAA,GAAA,GAAA,EAAA,CAAA;AACA,EAAA,IAAA,KAAA,GAAA,CAAA,CAAA;AACA;AACA,EAAA,OAAA,KAAA,GAAA,GAAA,CAAA,MAAA,EAAA;AACA,IAAA,MAAA,KAAA,GAAA,GAAA,CAAA,OAAA,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;AACA;AACA;AACA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,EAAA;AACA,MAAA,MAAA;AACA,KAAA;AACA;AACA,IAAA,IAAA,MAAA,GAAA,GAAA,CAAA,OAAA,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;AACA;AACA,IAAA,IAAA,MAAA,KAAA,CAAA,CAAA,EAAA;AACA,MAAA,MAAA,GAAA,GAAA,CAAA,MAAA,CAAA;AACA,KAAA,MAAA,IAAA,MAAA,GAAA,KAAA,EAAA;AACA;AACA,MAAA,KAAA,GAAA,GAAA,CAAA,WAAA,CAAA,GAAA,EAAA,KAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AACA,MAAA,SAAA;AACA,KAAA;AACA;AACA,IAAA,MAAA,GAAA,GAAA,GAAA,CAAA,KAAA,CAAA,KAAA,EAAA,KAAA,CAAA,CAAA,IAAA,EAAA,CAAA;AACA;AACA;AACA,IAAA,IAAA,SAAA,KAAA,GAAA,CAAA,GAAA,CAAA,EAAA;AACA,MAAA,IAAA,GAAA,GAAA,GAAA,CAAA,KAAA,CAAA,KAAA,GAAA,CAAA,EAAA,MAAA,CAAA,CAAA,IAAA,EAAA,CAAA;AACA;AACA;AACA,MAAA,IAAA,GAAA,CAAA,UAAA,CAAA,CAAA,CAAA,KAAA,IAAA,EAAA;AACA,QAAA,GAAA,GAAA,GAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,OAAA;AACA;AACA,MAAA,IAAA;AACA,QAAA,GAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,GAAA,kBAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA;AACA,OAAA,CAAA,OAAA,CAAA,EAAA;AACA,QAAA,GAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA;AACA,OAAA;AACA,KAAA;AACA;AACA,IAAA,KAAA,GAAA,MAAA,GAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA,GAAA,CAAA;AACA;;;;"}