{"version":3,"file":"intl-parse-accept-language.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["export type Options = {\n  /**\n   * A validate callback that is called for each `locale`. If the `locale` is valid, return the `locale` as a string.\n   * Otherwise return `undefined`, `null`, or an empty Array.\n   * Should the callback throw an error, the error will be caught and the `locale` will be ignored.\n   */\n  validate?: (locale: string) => string | string[] | null | undefined;\n\n  /**\n   * If set to `true`, the wildcard locale `*` will be returned in the array.\n   * If set to `false`, the wildcard locale `*` will be ignored.\n   * Defaults to `true`.\n   */\n  ignoreWildcard?: boolean;\n};\n\nconst defaultValidate = (locale: string) => locale;\n\nexport const parseAcceptLanguage = (\n  /** The value from the `Accept-Language` header.\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language\n   */\n  languageHeaderValue: string | null | undefined,\n  options: Options = {}\n): string[] => {\n  if (!languageHeaderValue) return [];\n  const { ignoreWildcard = true, validate = defaultValidate } = options;\n\n  return languageHeaderValue\n    .split(',')\n    .map((lang): [number, string] => {\n      const [locale, q = 'q=1'] = lang.split(';');\n      const trimmedLocale = locale.trim();\n      const numQ = Number(q.replace(/q ?=/, ''));\n      if (isNaN(numQ)) return [0, trimmedLocale];\n      return [numQ, trimmedLocale];\n    })\n    .sort(([q1], [q2]) => q2 - q1)\n    .flatMap(([_, locale]) => {\n      if (locale === '*' && ignoreWildcard) return [];\n      try {\n        return validate(locale) || [];\n        // return Intl.DateTimeFormat.supportedLocalesOf(locale);\n      } catch {\n        return [];\n      }\n    });\n};\n"],"names":["defaultValidate","locale","languageHeaderValue","options","ignoreWildcard","validate","split","map","lang","q","trimmedLocale","trim","numQ","Number","replace","isNaN","sort","flatMap"],"mappings":"oEAgBA,IAAMA,EAAkB,SAACC,UAAmBA,+BAET,SAIjCC,EACAC,eAAAA,IAAAA,EAAmB,KAEdD,EAAqB,MAAO,SAC6BC,EAAtDC,eAAAA,kBAAsDD,EAA/BE,SAAAA,aAAWL,WAEnCE,EACJI,MAAM,KACNC,KAAI,SAACC,SACwBA,EAAKF,MAAM,YAAxBG,aAAI,QACbC,OAAuBC,OACvBC,EAAOC,OAAOJ,EAAEK,QAAQ,OAAQ,YAClCC,MAAMH,GAAc,CAAC,EAAGF,GACrB,CAACE,EAAMF,MAEfM,MAAK,kCACLC,SAAQ,gBAAKhB,UACG,MAAXA,GAAkBG,EAAgB,MAAO,cAEpCC,EAASJ,IAAW,GAE3B,eACO"}